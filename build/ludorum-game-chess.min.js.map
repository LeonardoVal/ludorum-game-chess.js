{"version":3,"sources":["../src/__prologue__.js","../src/Chess.js","../src/ai/heuristic1.js","../src/__epilogue__.js"],"names":["__init__","base","Sermat","ludorum","ChessJS","declare","iterable","UserInterface","players","Chess","CHESS","INITIAL_FEN","fen","chessjs_package","__package__","__name__","eval","__dependencies__","exports","__SERMAT__","include","ai","syncGlobalChess","__currentFEN__","load","Game","name","constructor","params","this","globalChess","call","turn","moves","options","r","game_over","activePlayer","next","haps","update","raiseIf","move","result","in_checkmate","defeat","tied","static __SERMAT__","identifier","serializer","obj","clone","toString","toFEN","static fromFEN","str","square","PIECES","p","n","b","q","k","coord","Array","isArray","charAt","get","player","color","type","BOARD_FACTORS","PIECE_FACTORS","games","push","heuristic1","Object","freeze","makeEvaluationFunction","boardFactors","pieceFactors","game","role","sq","row","col"],"mappings":";;+VAEA,SAASA,SAASC,KAAMC,OAAQC,QAASC,SAAW,aAEnD,IAAIC,QAAUJ,KAAKI,QAClBC,SAAWL,KAAKK,SAChBC,cAAgBJ,QAAQK,QAAQD,cAGV,iBAAZH,UACVA,QAAUA,QAAQK,OAEnB,IAAIC,MAAQN,UACXO,YAAcD,MAAME,MAGjBC,iBACFC,YAAa,WACbC,SAAU,UACVf,SAAUgB,KAAI,kCAAoCZ,QAAQ,SAC1Da,qBAEDC,SACCJ,YAAa,qBACbC,SAAU,qBACVf,SAAUA,SACViB,kBAAmBhB,KAAMC,OAAQC,QAASU,iBAC1CM,YAAcC,SAAUnB,KAAME,UAE9BkB,OCxBH,SAASC,gBAAgBV,GAMxB,OALAA,EAAMA,GAAOD,YACTD,MAAMa,iBAAmBX,IAC5BF,MAAMc,KAAKZ,GACXF,MAAMa,eAAiBX,GAEjBF,MAGR,IAAID,MAAQS,QAAQT,MAAQJ,QAAQF,QAAQsB,MAC3CC,KAAM,QAINlB,SAAS,QAAU,SAKnBmB,YAAa,SAAeC,GAC3BC,KAAKjB,IAAMgB,GAAUA,EAAOhB,KAAOD,YACnC,IAAImB,EAAcR,gBAAgBO,KAAKjB,KACvCT,QAAQsB,KAAKM,KAAKF,KAAMA,KAAKrB,QAA+B,MAAvBsB,EAAYE,OAAiB,EAAI,KAQvEC,MAAO,SAAeC,GACrB,IAAIJ,EAAcR,gBAAgBO,KAAKjB,KACtCuB,EAAI,KAKL,OAJKL,EAAYM,eAChBD,MACEN,KAAKQ,gBAAkBP,EAAYG,MAAMC,IAErCC,GAKRG,KAAM,SAAcL,EAAOM,EAAMC,GAChCvC,KAAKwC,QAAQF,EAAM,gCAAiCA,EAAM,MAC1D,IAAIT,EAAcR,gBAAgBO,KAAKjB,KAEvC,OADAkB,EAAYY,KAAKT,EAAMJ,KAAKQ,iBACxBG,GACHX,KAAKjB,IAAMkB,EAAYlB,MAChBiB,MAEA,IAAIA,KAAKF,aAAcf,IAAKkB,EAAYlB,SAMjD+B,OAAQ,WACP,IAAIb,EAAcR,gBAAgBO,KAAKjB,KACvC,OAAKkB,EAAYM,YAENN,EAAYc,eACff,KAAKgB,SAELhB,KAAKiB,OAJL,MAYTC,qBACCC,WAAY,QACZC,WAAY,SAAyBC,GACpC,QAAUtC,IAAKsC,EAAItC,QAIrBuC,MAAO,WACN,OAAO,IAAItB,KAAKF,YAAYE,KAAKjB,MAMlCwC,SAAU,WACT,OAAOvB,KAAKwB,SAGbA,MAAO,WACN,OAAOxB,KAAKjB,KAMb0C,iBAAkB,SAAiBC,GAClC,OAAO,IAAI1B,MAAOjB,IAAKiB,KAAKjB,OAG7B4C,QACKC,QACHC,EAAG,OAAQC,EAAG,SAAUC,EAAG,SAAUzB,EAAG,OAAQ0B,EAAG,QAASC,EAAG,QAEzD,SAAgBC,GAClBC,MAAMC,QAAQF,KACjBA,EAAQ,WAAWG,OAAOH,EAAM,KAAOA,EAAM,GAAK,IAEnD,IACC5B,EADiBb,gBAAgBO,KAAKjB,KACtBuD,IAAIJ,GAKrB,OAJI5B,IACHA,EAAEiC,OAASvC,KAAKrB,QAAoB,MAAZ2B,EAAEkC,MAAgB,EAAI,GAC9ClC,EAAET,KAAO+B,OAAOtB,EAAEmC,OAEZnC,MAbJsB,OCrGDc,cA8DHC,cClED,OF6HDrE,QAAQsE,MAAMhE,MAAQA,MAItBA,MAAMU,WAAW6B,WAAa9B,QAAQJ,YAAY,IAAML,MAAMU,WAAW6B,WACzE9B,QAAQC,WAAWC,QAAQsD,KAAKjE,OAChCP,OAAOkB,QAAQF,SChIfA,QAAQG,GAAGsD,YACNJ,cAAgBK,OAAOC,QACzBnB,IACG,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IACrC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IACnC,GAAK,GAAK,EAAK,IAAK,IAAK,EAAK,GAAK,KACjC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IACrC,IAAO,IAAK,EAAK,EAAK,GAAK,GAAK,GAAG,KACnC,GAAK,EAAK,GAAO,GAAK,EAAG,EAAK,EAAK,KACjC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAEtCC,KACG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnC,GAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,KACnC,EAAK,EAAG,EAAK,IAAK,IAAK,EAAO,GAAK,KACnC,EAAG,GAAK,IAAK,EAAK,EAAK,IAAK,IAAO,KACnC,EAAK,EAAG,IAAK,EAAK,EAAK,IAAO,GAAK,KACnC,EAAG,GAAK,EAAK,IAAK,IAAK,EAAK,IAAO,KACnC,GAAK,EAAK,EAAG,GAAK,GAAO,GAAK,GAAK,KACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAEtCC,KACG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,KACnC,EAAK,EAAG,GAAK,EAAK,EAAK,GAAO,GAAK,KACnC,EAAG,GAAK,GAAK,EAAK,EAAK,GAAK,IAAO,KACnC,EAAK,EAAG,EAAK,EAAK,EAAK,EAAO,GAAK,KACnC,EAAG,EAAK,EAAK,EAAK,EAAK,EAAK,GAAO,KACnC,EAAG,GAAO,EAAK,EAAK,EAAK,EAAG,IAAO,KACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAEtCzB,IACG,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IACnC,GAAG,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,MACjC,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,MACnC,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,MACnC,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,MACnC,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,MACnC,GAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,KACnC,EAAK,EAAK,EAAG,GAAK,GAAO,EAAK,EAAK,IAEtC0B,KACG,GAAK,GAAK,GAAK,IAAK,IAAK,GAAK,GAAK,KACnC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,KACnC,EAAK,EAAG,GAAK,GAAK,GAAK,GAAO,GAAK,KACnC,GAAK,EAAG,GAAK,GAAK,GAAK,GAAO,GAAK,KACnC,EAAK,EAAG,GAAK,GAAK,GAAK,GAAO,GAAK,MACnC,EAAG,GAAK,GAAK,GAAK,GAAK,GAAO,GAAK,KACnC,EAAK,EAAG,GAAO,EAAK,EAAK,EAAK,GAAK,KACnC,GAAK,GAAK,GAAK,IAAK,IAAK,GAAK,GAAK,IAEtCC,KACG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KACnC,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IACrC,EAAK,EAAO,EAAK,EAAK,EAAK,EAAG,EAAK,IACnC,EAAK,EAAK,EAAO,EAAK,EAAG,EAAK,EAAK,MAGrCU,cAAgBI,OAAOC,QACtBnB,EAAG,GACHC,EAAG,GACHC,EAAG,GACHzB,EAAG,GACH0B,EAAG,GACHC,EAAG,OAyBJS,cAAeA,cACfC,cAAeA,cACfM,uBAxB4B,SAAgCC,EAAcC,GAI1E,OAHAD,EAAeA,GAAgBR,cAC/BS,EAAeA,GAAgBR,cAExB,SAAwBS,EAAMC,GAGpC,IAFA,IACCC,EADGxC,EAAS,EAEJyC,EAAM,EAAGA,EAAM,EAAGA,IAC1B,IAAK,IAAIC,EAAM,EAAGA,EAAM,EAAGA,KAC1BF,EAAKF,EAAKzB,QAAQ4B,EAAKC,OAGtB1C,GAAUqC,EAAaG,EAAGb,OAAsB,MAAba,EAAGd,MACrCU,EAAaI,EAAGb,MAAMc,GAAKC,GAAON,EAAaI,EAAGb,MAAM,EAAIc,GAAKC,KAIrE,OAAO1C,MC5FFzB","file":"ludorum-game-chess.min.js","sourcesContent":["/** Package wrapper and layout.\n*/\nfunction __init__(base, Sermat, ludorum, ChessJS) { \"use strict\";\n// Import synonyms. ////////////////////////////////////////////////////////////////////////////////\n\tvar declare = base.declare,\n\t\titerable = base.iterable,\n\t\tUserInterface = ludorum.players.UserInterface;\n\n// Workaround for difference in module definition depending on platform. ///////////////////////////\n\tif (typeof ChessJS === 'object') {\n\t\tChessJS = ChessJS.Chess;\n\t}\n\tvar CHESS = ChessJS(),\n\t\tINITIAL_FEN = CHESS.fen();\n\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar chessjs_package = {\n\t\t\t__package__: 'chess.js',\n\t\t\t__name__: 'ChessJS',\n\t\t\t__init__: eval('(function __init__() { return ('+ ChessJS +'); })'),\n\t\t\t__dependencies__: []\n\t\t},\n\t\texports = {\n\t\t\t__package__: 'ludorum-game-chess',\n\t\t\t__name__: 'ludorum_game_chess',\n\t\t\t__init__: __init__,\n\t\t\t__dependencies__: [base, Sermat, ludorum, chessjs_package],\n\t\t\t__SERMAT__: { include: [base, ludorum] },\n\t\t\t// Submodules\n\t\t\tai: { }\n\t\t};\n","/** # Chess\n\nImplementation of [Chess](http://www.fide.com/component/handbook/?id=124&view=article) for Ludorum.\n*/\n\nfunction syncGlobalChess(fen) {\n\tfen = fen || INITIAL_FEN;\n\tif (CHESS.__currentFEN__ !== fen) {\n\t\tCHESS.load(fen);\n\t\tCHESS.__currentFEN__ = fen;\n\t}\n\treturn CHESS;\n}\n\nvar Chess = exports.Chess = declare(ludorum.Game, {\n\tname: 'Chess',\n\n\t/** The game is played by two players: White and Black. White moves first.\n\t*/\n\tplayers: [\"White\", \"Black\"],\n\n\t/** The constructor takes the `activePlayer` (`\"White\"` by default), and the `board` as an\n\tinstance of `CheckerboardFromPieces` (with the initial setup by default).\n\t*/\n\tconstructor: function Chess(params){\n\t\tthis.fen = params && params.fen || INITIAL_FEN;\n\t\tvar globalChess = syncGlobalChess(this.fen);\n\t\tludorum.Game.call(this, this.players[globalChess.turn() === 'w' ? 0 : 1]);\n\t},\n\n\t// ## Game methods #############################################################################\n\n\t/** A move always places a piece in an empty square, if and only if by doing so one or more\n\tlines of the opponent's pieces get enclosed between pieces of the active player.\n\t*/\n\tmoves: function moves(options) {\n\t\tvar globalChess = syncGlobalChess(this.fen),\n\t\t\tr = null;\n\t\tif (!globalChess.game_over()) {\n\t\t\tr = {};\n\t\t\tr[this.activePlayer()] = globalChess.moves(options);\n\t\t}\n\t\treturn r;\n\t},\n\n\t/** TODO.\n\t*/\n\tnext: function next(moves, haps, update) {\n\t\tbase.raiseIf(haps, 'Haps are not required (given ', haps, ')!');\n\t\tvar globalChess = syncGlobalChess(this.fen);\n\t\tglobalChess.move(moves[this.activePlayer()]);\n\t\tif (update) {\n\t\t\tthis.fen = globalChess.fen();\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new this.constructor({ fen: globalChess.fen() });\n\t\t}\n\t},\n\n\t/** TODO.\n\t*/\n\tresult: function result() {\n\t\tvar globalChess = syncGlobalChess(this.fen);\n\t\tif (!globalChess.game_over()) {\n\t\t\treturn null;\n\t\t} else if (globalChess.in_checkmate()) {\n\t\t\treturn this.defeat();\n\t\t} else {\n\t\t\treturn this.tied();\n\t\t}\n\t},\n\n\t// ## Utility methods ##########################################################################\n\n\t/** The game state serialization uses [Forsyth–Edwards notation](http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation).\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Chess',\n\t\tserializer: function serialize_Chess(obj) {\n\t\t\treturn [{ fen: obj.fen }];\n\t\t}\n\t},\n\n\tclone: function clone() {\n\t\treturn new this.constructor(this.fen);\n\t},\n\n\t/** The default string representation of Chess is the\n\t[Forsyth–Edwards notation](http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation).\n\t*/\n\ttoString: function toString() {\n\t\treturn this.toFEN();\n\t},\n\n\ttoFEN: function toFEN() {\n\t\treturn this.fen;\n\t},\n\n\t/** The `fromFEN` function parses a string in [Forsyth–Edwards notation](http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation)\n\tand builds the corresponding game state.\n\t*/\n\t'static fromFEN': function fromFEN(str) {\n\t\treturn new this({ fen: this.fen });\n\t},\n\n\tsquare: (function () {\n\t\tvar PIECES = {\n\t\t\tp: 'Pawn', n: 'Knight', b: 'Bishop', r: 'Rook', q: 'Queen', k: 'King'\n\t\t};\n\t\treturn function square(coord) {\n\t\t\tif (Array.isArray(coord)) {\n\t\t\t\tcoord = 'abcdefgh'.charAt(coord[1]) + (coord[0] + 1);\n\t\t\t}\n\t\t\tvar globalChess = syncGlobalChess(this.fen),\n\t\t\t\tr = globalChess.get(coord);\n\t\t\tif (r) {\n\t\t\t\tr.player = this.players[r.color === 'w' ? 0 : 1];\n\t\t\t\tr.name = PIECES[r.type];\n\t\t\t}\n\t\t\treturn r;\n\t\t};\n\t})()\n}); // declare Othello.\n\n/** Adding Chess to `ludorum.games`.\n*/\nludorum.games.Chess = Chess;\n\n/** Sermat serialization.\n*/\nChess.__SERMAT__.identifier = exports.__package__ +'.'+ Chess.__SERMAT__.identifier;\nexports.__SERMAT__.include.push(Chess);\nSermat.include(exports);\n","/** # Heuristic 1  \n\nGame evaluation heuristic based on a [Lauri Hartikka's blog post](https://medium.freecodecamp.org/simple-chess-ai-step-by-step-1d55a9266977).\n*/\nexports.ai.heuristic1 = (function () {\n\tvar BOARD_FACTORS = Object.freeze({\n\t\t\tp: [\n\t\t\t\t[ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n\t\t\t\t[+5.0,+5.0,+5.0,+5.0,+5.0,+5.0,+5.0,+5.0],\n\t\t\t\t[+1.0,+1.0,+2.0,+3.0,+3.0,+2.0,+1.0,+1.0],\n\t\t\t\t[+0.5,+0.5,+1.0,+2.5,+2.5,+1.0,+0.5,+0.5],\n\t\t\t\t[ 0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0],\n\t\t\t\t[+0.5,-0.5,-1.0, 0.0, 0.0,-1.0,-0.5,+0.5],\n\t\t\t\t[+0.5,+1.0,+1.0,-2.0,-2.0,+1.0,+1.0,+0.5],\n\t\t\t\t[ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n\t\t\t],\n\t\t\tn: [\n\t\t\t\t[-5.0,-4.0,-3.0,-3.0,-3.0,-3.0,-4.0,-5.0],\n\t\t\t\t[-4.0,-2.0, 0.0, 0.0, 0.0, 0.0,-2.0,-4.0],\n\t\t\t\t[-3.0, 0.0,+1.0,+1.5,+1.5,+1.0, 0.0,-3.0],\n\t\t\t\t[-3.0,+0.5,+1.5,+2.0,+2.0,+1.5,+0.5,-3.0],\n\t\t\t\t[-3.0, 0.0,+1.5,+2.0,+2.0,+1.5, 0.0,-3.0],\n\t\t\t\t[-3.0,+0.5,+1.0,+1.5,+1.5,+1.0,+0.5,-3.0],\n\t\t\t\t[-4.0,-2.0, 0.0,+0.5,+0.5, 0.0,-2.0,-4.0],\n\t\t\t\t[-5.0,-4.0,-3.0,-3.0,-3.0,-3.0,-4.0,-5.0]\n\t\t\t],\n\t\t\tb: [\n\t\t\t\t[-2.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-2.0],\n\t\t\t\t[-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-1.0],\n\t\t\t\t[-1.0, 0.0,+0.5,+1.0,+1.0,+0.5, 0.0,-1.0],\n\t\t\t\t[-1.0,+0.5,+0.5,+1.0,+1.0,+0.5,+0.5,-1.0],\n\t\t\t\t[-1.0, 0.0,+1.0,+1.0,+1.0,+1.0, 0.0,-1.0],\n\t\t\t\t[-1.0,+1.0,+1.0,+1.0,+1.0,+1.0,+1.0,-1.0],\n\t\t\t\t[-1.0,+0.5, 0.0, 0.0, 0.0, 0.0,+0.5,-1.0],\n\t\t\t\t[-2.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-2.0]\n\t\t\t],\n\t\t\tr: [\n\t\t\t\t[ 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],\n\t\t\t\t[ 0.5,+1.0,+1.0,+1.0,+1.0,+1.0,+1.0,+0.5],\n\t\t\t\t[-0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-0.5],\n\t\t\t\t[-0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-0.5],\n\t\t\t\t[-0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-0.5],\n\t\t\t\t[-0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-0.5],\n\t\t\t\t[-0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-0.5],\n\t\t\t\t[ 0.0, 0.0, 0.0,+0.5,+0.5, 0.0, 0.0, 0.0]\n\t\t\t],\n\t\t\tq: [\n\t\t\t\t[-2.0,-1.0,-1.0,-0.5,-0.5,-1.0,-1.0,-2.0],\n\t\t\t\t[-1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,-1.0],\n\t\t\t\t[-1.0, 0.0,+0.5,+0.5,+0.5,+0.5, 0.0,-1.0],\n\t\t\t\t[-0.5, 0.0,+0.5,+0.5,+0.5,+0.5, 0.0,-0.5],\n\t\t\t\t[ 0.0, 0.0,+0.5,+0.5,+0.5,+0.5, 0.0,-0.5],\n\t\t\t\t[-1.0,+0.5,+0.5,+0.5,+0.5,+0.5, 0.0,-1.0],\n\t\t\t\t[-1.0, 0.0,+0.5, 0.0, 0.0, 0.0, 0.0,-1.0],\n\t\t\t\t[-2.0,-1.0,-1.0,-0.5,-0.5,-1.0,-1.0,-2.0]\n\t\t\t],\n\t\t\tk: [\n\t\t\t\t[-3.0,-4.0,-4.0,-5.0,-5.0,-4.0,-4.0,-3.0],\n\t\t\t\t[-3.0,-4.0,-4.0,-5.0,-5.0,-4.0,-4.0,-3.0],\n\t\t\t\t[-3.0,-4.0,-4.0,-5.0,-5.0,-4.0,-4.0,-3.0],\n\t\t\t\t[-3.0,-4.0,-4.0,-5.0,-5.0,-4.0,-4.0,-3.0],\n\t\t\t\t[-2.0,-3.0,-3.0,-4.0,-4.0,-3.0,-3.0,-2.0],\n\t\t\t\t[-1.0,-2.0,-2.0,-2.0,-2.0,-2.0,-2.0,-1.0],\n\t\t\t\t[+2.0,+2.0, 0.0, 0.0, 0.0, 0.0,+2.0,+2.0],\n\t\t\t\t[+2.0,+3.0,+1.0, 0.0, 0.0,+1.0,+3.0,+2.0]\n\t\t\t]\n\t\t}),\n\t\tPIECE_FACTORS = Object.freeze({\n\t\t\tp: 10.0,\n\t\t\tn: 30.0,\n\t\t\tb: 30.0,\n\t\t\tr: 50.0,\n\t\t\tq: 90.0,\n\t\t\tk: 900.0\n\t\t});\n\n\tvar makeEvaluationFunction = function makeEvaluationFunction(boardFactors, pieceFactors) {\n\t\tboardFactors = boardFactors || BOARD_FACTORS;\n\t\tpieceFactors = pieceFactors || PIECE_FACTORS;\n\t\t//TODO Calculate max result for normalization.\n\t\treturn function chessHeuristic(game, role) {\n\t\t\tvar result = 0, \n\t\t\t\tsq;\n\t\t\tfor (var row = 0; row < 8; row++) {\n\t\t\t\tfor (var col = 0; col < 8; col++) {\n\t\t\t\t\tsq = game.square([row, col]);\n\t\t\t\t\tif (sq) {\n\t\t\t\t\t\t//FIXME Check player's role.\n\t\t\t\t\t\tresult += pieceFactors[sq.type] * (sq.color === 'w' ? \n\t\t\t\t\t\t\tboardFactors[sq.type][row][col] : boardFactors[sq.type][8 - row][col]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result; //FIXME Normalize!\n\t\t};\n\t};\n\n\treturn {\n\t\tBOARD_FACTORS: BOARD_FACTORS,\n\t\tPIECE_FACTORS: PIECE_FACTORS,\n\t\tmakeEvaluationFunction: makeEvaluationFunction\n\t\t//TODO Player building functions (MiniMax, etc).\n\t};\n})();","// See __prologue__.js\n\treturn exports;\n}\n"]}