//! ludorum-game-chess 0.0.1

(function(e){"use strict";this["ludorum-game-chess"]=e(this.base,this.Sermat,this.ludorum,this.ChessJS)}).call(this,function __init__(base,Sermat,ludorum,ChessJS){"use strict";var declare=base.declare,iterable=base.iterable,UserInterface=ludorum.players.UserInterface;"object"==typeof ChessJS&&(ChessJS=ChessJS.Chess);var CHESS=ChessJS(),INITIAL_FEN=CHESS.fen(),chessjs_package={__package__:"chess.js",__name__:"ChessJS",__init__:eval("(function __init__() { return ("+ChessJS+"); })"),__dependencies__:[]},exports={__package__:"ludorum-game-chess",__name__:"ludorum_game_chess",__init__:__init__,__dependencies__:[base,Sermat,ludorum,chessjs_package],__SERMAT__:{include:[base,ludorum]},ai:{}};function syncGlobalChess(e){return e=e||INITIAL_FEN,CHESS.__currentFEN__!==e&&(CHESS.load(e),CHESS.__currentFEN__=e),CHESS}var Chess=exports.Chess=declare(ludorum.Game,{name:"Chess",players:["White","Black"],constructor:function(e){this.fen=e&&e.fen||INITIAL_FEN;var s=syncGlobalChess(this.fen);ludorum.Game.call(this,this.players["w"===s.turn()?0:1])},moves:function(e){var s=syncGlobalChess(this.fen),t=null;return s.game_over()||((t={})[this.activePlayer()]=s.moves(e)),t},next:function(e,s,t){base.raiseIf(s,"Haps are not required (given ",s,")!");var r=syncGlobalChess(this.fen);return r.move(e[this.activePlayer()]),t?(this.fen=r.fen(),this):new this.constructor({fen:r.fen()})},result:function(){var e=syncGlobalChess(this.fen);return e.game_over()?e.in_checkmate()?this.defeat():this.tied():null},"static __SERMAT__":{identifier:"Chess",serializer:function(e){return[{fen:e.fen}]}},clone:function(){return new this.constructor(this.fen)},toString:function(){return this.toFEN()},toFEN:function(){return this.fen},"static fromFEN":function(e){return new this({fen:this.fen})},square:(PIECES={p:"Pawn",n:"Knight",b:"Bishop",r:"Rook",q:"Queen",k:"King"},function(e){Array.isArray(e)&&(e="abcdefgh".charAt(e[1])+(e[0]+1));var s=syncGlobalChess(this.fen).get(e);return s&&(s.player=this.players["w"===s.color?0:1],s.name=PIECES[s.type]),s})}),PIECES,BOARD_FACTORS,PIECE_FACTORS;return ludorum.games.Chess=Chess,Chess.__SERMAT__.identifier=exports.__package__+"."+Chess.__SERMAT__.identifier,exports.__SERMAT__.include.push(Chess),Sermat.include(exports),exports.ai.heuristic1=(BOARD_FACTORS=Object.freeze({p:[[0,0,0,0,0,0,0,0],[5,5,5,5,5,5,5,5],[1,1,2,3,3,2,1,1],[.5,.5,1,2.5,2.5,1,.5,.5],[0,0,0,2,2,0,0,0],[.5,-.5,-1,0,0,-1,-.5,.5],[.5,1,1,-2,-2,1,1,.5],[0,0,0,0,0,0,0,0]],n:[[-5,-4,-3,-3,-3,-3,-4,-5],[-4,-2,0,0,0,0,-2,-4],[-3,0,1,1.5,1.5,1,0,-3],[-3,.5,1.5,2,2,1.5,.5,-3],[-3,0,1.5,2,2,1.5,0,-3],[-3,.5,1,1.5,1.5,1,.5,-3],[-4,-2,0,.5,.5,0,-2,-4],[-5,-4,-3,-3,-3,-3,-4,-5]],b:[[-2,-1,-1,-1,-1,-1,-1,-2],[-1,0,0,0,0,0,0,-1],[-1,0,.5,1,1,.5,0,-1],[-1,.5,.5,1,1,.5,.5,-1],[-1,0,1,1,1,1,0,-1],[-1,1,1,1,1,1,1,-1],[-1,.5,0,0,0,0,.5,-1],[-2,-1,-1,-1,-1,-1,-1,-2]],r:[[0,0,0,0,0,0,0,0],[.5,1,1,1,1,1,1,.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[-.5,0,0,0,0,0,0,-.5],[0,0,0,.5,.5,0,0,0]],q:[[-2,-1,-1,-.5,-.5,-1,-1,-2],[-1,0,0,0,0,0,0,-1],[-1,0,.5,.5,.5,.5,0,-1],[-.5,0,.5,.5,.5,.5,0,-.5],[0,0,.5,.5,.5,.5,0,-.5],[-1,.5,.5,.5,.5,.5,0,-1],[-1,0,.5,0,0,0,0,-1],[-2,-1,-1,-.5,-.5,-1,-1,-2]],k:[[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-3,-4,-4,-5,-5,-4,-4,-3],[-2,-3,-3,-4,-4,-3,-3,-2],[-1,-2,-2,-2,-2,-2,-2,-1],[2,2,0,0,0,0,2,2],[2,3,1,0,0,1,3,2]]}),PIECE_FACTORS=Object.freeze({p:10,n:30,b:30,r:50,q:90,k:900}),{BOARD_FACTORS:BOARD_FACTORS,PIECE_FACTORS:PIECE_FACTORS,makeEvaluationFunction:function(e,s){return e=e||BOARD_FACTORS,s=s||PIECE_FACTORS,function(t,r){for(var n,_=0,i=0;i<8;i++)for(var a=0;a<8;a++)(n=t.square([i,a]))&&(_+=s[n.type]*("w"===n.color?e[i][a]:e[8-i][a]));return _}}}),exports});
//# sourceMappingURL=ludorum-game-chess-tag.min.js.map